*Checkpoint 1:
___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 1                                 | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Only one of the character was typed to the screen when we enable the
keyboard init and keyboard_handler. We have some trouble to find where the
bug was located, and we ask TA during the office hour, and found out that
the keyboard handler portion where we check if the scancode is within the 
alphanurmeric range was preventing an eoi if we just return. So we made a
change to that portion of the code, by adding some if statements and send 
eoi functionalities. 
___________________________________________________________________________


___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 2                                 | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Our RTC have similiar issue as the one we had with keyboard_handler, where
only one of interrupt was recieved by the operating system. We also asked 
TA during the office hour regarding this issue, and she believe that its 
reg c in RTC causing some sort of problems, we need to make sure we are 
reading from a certain rtc register in order for it to send another 
interrupt. Later, we found out that all we need is to add linkage.
___________________________________________________________________________


___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 3                                 | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Paging is crashing the kernel. The fix was changing the order of the
control register enabling.
___________________________________________________________________________


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 4                                 | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Paging does not work with the keyboard and rtc. The video memory is not
mapping properly.
___________________________________________________________________________


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 5                                 | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
The keyboard and the rtc was not working properly. The problem was that the
interrupt was not working properly and it was only handling a single interrupt.
We realized that we did not include the linkages for the interrupt handlers
so the c calling convention was messing up the interrupts.
___________________________________________________________________________




*Checkpoint 2:
___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 6                                 | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
When test our rtc driver functionalities (read, write, open, and close),
the character was only printed in the first line of our terminal, because 
wer use putc to print our character, we checked the putc fcuntion in the 
lib.c to see how it work. Later, we found that there's two lines of code 
that were flipped, which is the reason of why it does not go to new line 
after fill up the first line of the terminal.
changed:
screen_y = (screen_y + (screen_x / NUM_COLS)) % NUM_ROWS;
screen_x %= NUM_COLS;
___________________________________________________________________________


___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 7                                 | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Filesystem is not addressed correctly. Needed to use mods_start address
instead of the mods_addr for the start of the filesystem.
___________________________________________________________________________


___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 8                                 | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Read data function is creating page fault exception. The function was not
checking if the end of the file had been reach and was reading too far.
___________________________________________________________________________


___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 9                                 | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Directory read function was never returning. The if statement for
returning the function had a syntax error that was not showing up when
compiling.
___________________________________________________________________________


___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 10                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Had a problem where the terminal was not displaying the correct characters
when typing. The problem was that the terminal was not clearing the characters
when the backspace was pressed. Instead, it was just overwriting the characters
with the new characters. The problem was that the backspace was not clearing
the characters before the x position was decremented.
___________________________________________________________________________



*Checkpoint 3:
___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 10                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Page faulting when filling in pcb structure. Our issue was we had not
created a temporary file array structure to place into the pcb. After
adding this the program does not page fault when filling in the pcb
structure.
___________________________________________________________________________



___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 11                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Program is not existing at the correct space in memory. The program loader
was putting the program at the physical address not the virtual address.
___________________________________________________________________________



___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 12                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Page faulting when iret while trying to switch to user mode. We believe we
are having an issue with memory setup, but can't seem to figure out where
the fault is coming from.
___________________________________________________________________________

___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 13                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
when we run system call execute, we got a page fault when we try to fill 
in file array with read, write, open and close. Later, when we debug it
using gdb, we found out that we don't have an object set up, which is the
reason why we keep getting page fault. So we change something like this:
pcb[curr].f_array[j].f_op_tbl_ptr->open = (int32_t*) &rtc_open;
pcb[curr].f_array[j].f_op_tbl_ptr->close = (int32_t*) &rtc_close;
pcb[curr].f_array[j].f_op_tbl_ptr->read = (int32_t*) &rtc_read;
pcb[curr].f_array[j].f_op_tbl_ptr->write = (int32_t*) &rtc_write;
to this:
f_op_tbl_t temp_f_op_tbl;
temp_f_op_tbl.open = &rtc_open;
temp_f_op_tbl.read = &rtc_read;
temp_f_op_tbl.write = &rtc_write;
temp_f_op_tbl.close = &rtc_close;
pcb[curr].f_array[j].f_op_tbl_ptr = &temp_f_op_tbl;
___________________________________________________________________________



*Checkpoint 4:
___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 14                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
when we use syscall_write to rtc_wrtie the frequency of the interrupts of
how quick it should switch from one frame to another, we found out that
our fish is much slower compare to the example provided from brokeos,
later we found out that the argument buf is the one that we need to set as
our frequency for interrupts, rather than the argument nbytes.
___________________________________________________________________________

___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 15                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
When calling cat, we were getting an error where it would not print anything
despite having the correct file. The problem was that we were not checking
whether we were reading to the end of the file properly. If we reached the end
of the file, we would return a 0 instead of the number of bytes read. This
would cause the while loop in the cat function to not enter and would skip
over the the write that we needed to do.
___________________________________________________________________________

___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 16                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
We had a problem where ls function was not working properly. The problem was
that the strlen function that we had would not return the correct nubmer of bytes
when the file name was longer than 32 bytes. We fixed this by changing the
maximum length that the strlen function would return.
___________________________________________________________________________

___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 17                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
There was a problem with our bound checking when trying to execute more
processes than we had allocated for. This would cause a page fault and the
OS would loop. We had to had a bound check to not try and execute another
program when we have reached the max amount of processes.
___________________________________________________________________________

___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 18                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
Page faulting on commands and arguments that were too long. We did not
have bound checking on whether the commands and arguments would fit into
their respective buffers.
___________________________________________________________________________




*Checkpoint 5:
___________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
                                BUG LOG 19                                | 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++|
when we swap terminals by pressing alt + F#, it switches screens then 
freezes and doesnt accept any keyboard inputs or anything. later we found 
out that we need send eoi before the call to the switch function, not 
after, because you will never return back there.
___________________________________________________________________________

